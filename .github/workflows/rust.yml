name: tauri-build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch: {}   # puoi avviarlo a mano dal tab Actions

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            args: '--target aarch64-apple-darwin'
          - os: macos-latest
            args: '--target x86_64-apple-darwin'
          - os: windows-latest
            args: ''
          - os: ubuntu-latest
            args: ''
          - os: ubuntu-latest
            args: '--target aarch64-unknown-linux-gnu'
    runs-on: ${{ matrix.os }}

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: npm

      - name: setup rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.os == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: add mac targets
        if: matrix.os == 'macos-latest'
        run: |
          rustup target add aarch64-apple-darwin
          rustup target add x86_64-apple-darwin

      - name: add linux ARM64 target
        if: matrix.args == '--target aarch64-unknown-linux-gnu'
        run: rustup target add aarch64-unknown-linux-gnu

      - name: cache cargo
        uses: Swatinem/rust-cache@v2

      - name: install frontend deps
        run: npm ci

      - name: install nsis
        if: matrix.os == 'windows-latest'
        run: choco install nsis -y

      - name: install linux deps
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev patchelf libsoup-3.0-dev libwebkit2gtk-4.1-dev libjavascriptcoregtk-4.1-dev


      - name: install ARM64 cross deps
        if: matrix.args == '--target aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
          mkdir -p .cargo
          echo '[target.aarch64-unknown-linux-gnu]' > .cargo/config.toml
          echo 'linker = "aarch64-linux-gnu-gcc"' >> .cargo/config.toml
          echo 'ar = "aarch64-linux-gnu-ar"' >> .cargo/config.toml


      - name: build frontend
        run: npm run build

      - name: ensure bundle_dmg.sh is executable (macOS x86_64)
        if: matrix.os == 'macos-latest' && matrix.args == '--target x86_64-apple-darwin'
        run: chmod +x src-tauri/target/x86_64-apple-darwin/release/bundle/dmg/bundle_dmg.sh

      - name: build tauri app
        run: npm run tauri build -- ${{ matrix.args }}
        env:
          PKG_CONFIG_ALLOW_CROSS: ${{ matrix.args == '--target aarch64-unknown-linux-gnu' && '1' || '' }}
          PKG_CONFIG_PATH: /usr/lib/aarch64-linux-gnu/pkgconfig:/usr/share/pkgconfig:/usr/lib/pkgconfig

      - name: upload bundle Windows
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: AirShare-Setup.exe
          path: src-tauri/target/release/bundle/nsis/*.exe

      - name: upload bundle macOS aarch64
        if: matrix.os == 'macos-latest' && matrix.args == '--target aarch64-apple-darwin'
        uses: actions/upload-artifact@v4
        with:
          name: AirShare-ARM64.dmg
          path: src-tauri/target/aarch64-apple-darwin/release/bundle/dmg/*.dmg

      - name: upload bundle macOS x86_64
        if: matrix.os == 'macos-latest' && matrix.args == '--target x86_64-apple-darwin'
        uses: actions/upload-artifact@v4
        with:
          name: AirShare-x86_64.dmg
          path: src-tauri/target/x86_64-apple-darwin/release/bundle/dmg/AirShare_0.3.1_x64.dmg

      - name: upload bundle Linux
        if: matrix.os == 'ubuntu-latest' && matrix.args == ''
        uses: actions/upload-artifact@v4
        with:
          name: AirShare-linux
          path: src-tauri/target/release/bundle/deb/*.deb

      - name: upload bundle Linux AppImage
        if: matrix.os == 'ubuntu-latest' && matrix.args == ''
        uses: actions/upload-artifact@v4
        with:
          name: AirShare-linux-AppImage
          path: src-tauri/target/release/bundle/appimage/*.AppImage

      - name: upload bundle Linux ARM64
        if: matrix.os == 'ubuntu-latest' && matrix.args == '--target aarch64-unknown-linux-gnu'
        uses: actions/upload-artifact@v4
        with:
          name: AirShare-linux-arm64
          path: src-tauri/target/aarch64-unknown-linux-gnu/release/bundle/deb/*.deb

      - name: upload bundle Linux ARM64 AppImage
        if: matrix.os == 'ubuntu-latest' && matrix.args == '--target aarch64-unknown-linux-gnu'
        uses: actions/upload-artifact@v4
        with:
          name: AirShare-linux-arm64-AppImage
          path: src-tauri/target/aarch64-unknown-linux-gnu/release/bundle/appimage/*.AppImage
